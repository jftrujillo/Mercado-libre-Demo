apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../ktlint.gradle'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions { jvmTarget = "1.8" }
}

preBuild.dependsOn ktlint

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation Dependencies.kotlinStandardLibrary
    implementation Dependencies.coreKtxLibrary
    implementation Dependencies.appCompatLibrary
    implementation Dependencies.liveDataLibrary
    implementation Dependencies.recyclerViewLibrary
    implementation Dependencies.androidViewModelLibrary
    implementation Dependencies.constraintLayoutLibrary
    implementation Dependencies.navigationFragment
    implementation Dependencies.navigationUi
    implementation Dependencies.glideLibrary
    annotationProcessor AnnotationProcessor.glideAnnotationProcessor

    testImplementation TestDependencies.jUnitLibrary
    testImplementation TestDependencies.mockitoLibrary
    androidTestImplementation TestDependencies.jUnitExtAndroidLibrary

    implementation Dependencies.hiltLibrary
    kapt AnnotationProcessor.hiltAnnotationProcessor
    implementation Dependencies.hiltViewModelLibrary
    kapt Dependencies.hiltViewModelCompiler


    implementation project(path: ':domain')
}
